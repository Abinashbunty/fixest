% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiscFuns.R
\name{aggregate.fixest}
\alias{aggregate.fixest}
\title{Aggregates the values of coefficients}
\usage{
\method{aggregate}{fixest}(x, var, ...)
}
\arguments{
\item{x}{A fixest object.}

\item{var}{A character scalar describing the pattern to be matched. All variables that match the pattern will be aggregated. It must be of the form \code{"(root)"}, the parentheses must be there and the resulting variable name will be \code{"root"}. You can add another root with parentheses: \code{"(root)regex(root2)"}, in which case the resulting name is \code{"root::root2"}. To name the resulting variable differently you can pass a named vector: \code{c("name" = "pattern")} or \code{c("name" = "pattern(root2)")}.}

\item{...}{Arguments to be passed to \code{\link[fixest]{summary.fixest}}.}
}
\value{
It returns a matrix representing a table of coefficients.
}
\description{
Simple tool that aggregates the value of coefficients.
}
\examples{

#
# DiD example
#

# first we set up the data

set.seed(1)
n_group = 20
n_per_group = 5

id_i = paste0((1:n_group), ":", rep(1:n_per_group, each = n_group))
id_t = 1:10

base = expand.grid(id = id_i, year = id_t)
base$group = as.numeric(gsub(":.+", "", base$id))

base$year_treated = base$group
base$year_treated[base$group > 10] = 10000
base$treat_post = (base$year >= base$year_treated) * 1
base$time_to_treatment = pmax(base$year - base$year_treated, -1000)
base$treated = (base$year_treated < 10000) * 1

base$y_true = base$treat_post * (1 + 1 * base$time_to_treatment - 1 * base$group)
base$y = base$y_true + rnorm(nrow(base))

# we drop the always treated
base = base[base$group > 1,]

# Now we perform the estimation
res_naive = feols(y ~ i(treated, time_to_treatment, -1, drop = -1000) | id + year, base)

res_cohort = feols(y ~ i(time_to_treatment, f2 = group, drop = c(-1, -1000)) | id + year, base)

coefplot(res_naive, ylim = c(-6, 8))
att_true = tapply(base$y_true, base$time_to_treatment, mean)[-1]
points(-9:8 + 0.15, att_true, pch = 15, col = 2)

# The aggregate effect for each period
agg_coef = aggregate(res_cohort, "(ti.*nt)::(-?[[:digit:]]+)")
x = c(-9:-2, 0:8) + .35
points(x, agg_coef[, 1], pch = 17, col = 4)
ci_low = agg_coef[, 1] - 1.96 * agg_coef[, 2]
ci_up = agg_coef[, 1] + 1.96 * agg_coef[, 2]
segments(x0 = x, y0 = ci_low, x1 = x, y1 = ci_up, col = 4)


# The ATT
aggregate(res_cohort, c("ATT" = "treatment::[^-]"))
mean(base[base$treat_post == 1, "y_true"])

}
