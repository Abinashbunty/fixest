% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsb.R
\name{dsb}
\alias{dsb}
\title{Simple and powerful string manipulation with the dot square bracket operator}
\usage{
dsb(..., frame = parent.frame(), sep = "", vectorize = FALSE, nest = TRUE)
}
\arguments{
\item{...}{Character scalars that will be collapsed with the argument \code{sep}. You can use \code{".[x]"} within each character string to insert the value of \code{x} in the string. You can add string operations in each \code{".[]"} instance with the syntax \code{"'arg'op ? x"} (resp. \code{"'arg'op ! x"}) to apply the operation \code{'op'} with the argument \code{'arg'} to \code{x} (resp. the verbatim of \code{x}). Otherwise, what to say? Ah, nesting is enabled, and since there's over 30 operators, it's bit complicated to sort you out in this small space. But type \code{dsb("--help")} to prompt an (almost) extensive help.}

\item{frame}{An environment used to evaluate the variables in \code{".[]"}.}

\item{sep}{Character scalar, default is \code{""}. It is used to collapse all the elements in \code{...}.}

\item{vectorize}{Logical, default is \code{FALSE}. If \code{TRUE}, the values in \code{".[]"} will be vectorized with \code{c()} instead of being appended with \code{\link[base]{paste}}.}

\item{nest}{Logical, default is \code{TRUE}. Whether the original character strings should be nested into a \code{".[]"}. If \code{TRUE}, then things like \code{dsb("S!one, two")} are equivalent to \code{dsb(".[S!one, two]")} and hence create the vector \code{c("one", "two")}.}
}
\value{
It returns a character vector whose length depends on the elements and operations in \code{".[]"}.
}
\description{
Simple and powerful string manipulation with the dot square bracket operator
}
\examples{




}
