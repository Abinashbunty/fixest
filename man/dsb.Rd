% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiscFuns.R
\name{dsb}
\alias{dsb}
\title{Extends strings with variables using the Dot Square Bracket operator}
\usage{
dsb(x, collapse = NULL)
}
\arguments{
\item{x}{A character string, must be of length 1.}

\item{collapse}{If the variables inserted into the string are of length greater than 1, you can merge into a single string with \code{collapse}.

Every expression inside \code{.[]} is evaluated in the current frame and then coerced to character and inserted into the character string.

If the expression inside \code{.[]} is a vector, then the result will be a vector except the argument \code{collapse} is used.}
}
\value{
A character vector. It is of length > 1 only if the variables inserted are of length > 1.
}
\description{
Simple utility to insert variables into character strings using the "dot square bracket" operator. Typically \code{dsb("Hello I'm .[x]!")} is equivalent to \code{paste0("hello I'm ", x, "!")}.
}
\examples{

guy_all = c("Jenny", "Bryan")
loc_all = c("kitchen", "bathroom")

guy = sample(guy_all, 1)
loc = sample(loc_all, 1)

dsb("Where is .[guy]? .[guy] is in the .[loc].")

# Since the stuff in brackets is evaluated in the current frame,
# you can do things like:

guy_gen = function() sample(guy_all, 1)
loc_gen = function() sample(loc_all, 1)

dsb("Where is .[g <- guy_gen()]? .[g] is in the .[loc_gen()].")


}
\author{
Laurent Berge
}
